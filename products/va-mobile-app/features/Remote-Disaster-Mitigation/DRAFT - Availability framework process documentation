### Availability Framework
The mobile app team has an availability framework to remotely address critical issues found in the app. The benefit of this framework is our use of Remote Configuration by which we can "turn off" or restrict users' access to all or parts of the app while we fix a critical issue. 

In this framework, we communicate 4 things to users:
1. We know there's an issue.
2. We're fixing the issue.
3. Veterans can still access their information in other ways, whether by visiting VA.gov or calling a phone number.
4. Veterans know how to regain access via the mobile app (once available).

### Use cases

**Use case 1 (all users)**: **The app has experienced a critical issue whereby a screen can't be rendered without crashing the app or presenting a problematic screen (code instead of UI)**. We want to prevent users from attempting to load the problematic screen until a fix has been made. We'll show a message instead of attempting to load the problem screen.
Example: A coding error would mean the mobile app would show unrecognizable information instead of normal UI the vet is accustomed to. There is also the possibility this would force entire app to crash.

Goal: Prevent all users from attempting to load the problem screen until a fix has been made (to prevent app crashing).

**USE CASE 2**:  **A feature (or part of a feature) is broken in the mobile app but a _screen can be rendered_.** (**For ALL USERS**)
RX Example:  We are showing the wrong personal information in Rx. The feature is still working  and we can show the UI, but it is acritical enough error that we need to shut down the feature and establish a fix.

Goal: Prevent ALL USERS from accessing a broken feature until a fix has been made and offer the ability to get that info in some other way in the meantime (A&B) & then empower users to fix it (B).


**USE CASE 3**:  **A screen element, feature, or part of feature is broken (for SOME users, not all)**. The feature entry point can still be accessed and a screen can still be rendered, but some folks can see data within the feature and others canâ€™t.
A. We are working to resolve it remotely
B. The problem is now resolved and installing a new version of the app will correct the problem

Goal: For a feature that is broken for SOME USERS but not all, set expectations and provide guidance (around how to get that info some other way in the meantime (A&B) and then empower users to fix it (B)) that helps the affected segment until a fix has been made, but do it without preventing access to that feature for the users who are not affected by the issue.
